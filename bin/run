#!/usr/bin/env ruby

require 'csv'
require 'dotenv'
require 'pathname'
require 'pry'

require_relative '../lib/rp_runner/setup'
require_relative '../lib/rp_runner/driver'

Dotenv.load

RACE_URL = ENV.fetch('RP_RACE_URL')
RACE_PASSWORD = ENV.fetch('RP_RACE_PASSWORD')
RACE_GROUP_ID = ENV.fetch('RP_RACE_GROUP_ID')
RACE_GROUP_PASSWORD = ENV.fetch('RP_RACE_GROUP_PASSWORD')

RUNNER_DATA_PATH = ENV.fetch('RP_RUNNER_DATA_PATH')

path = Pathname(RUNNER_DATA_PATH)
runners = CSV.open(path, headers: true,
                   header_converters: ->(h) { h.downcase.gsub(' ', '_').to_sym },
                                     strip: true)#.to_a


# SHIRT_MAPPINGS = {
  # "Men's Large" => '',
  # "Men's Medium" => '',
  # "Men's Small" => '',
  # "Men's XL" => '',
  # "Women's Large" => '',
  # "Women's Medium" => '',
  # "Women's Small" => '',
  # "Women's XL" => '',
# }

# race_name = '5k Race' # TEST

browser = Capybara.current_session
# driver = browser.driver.browser

driver = RpRunner::Driver.new(browser, url: RACE_URL,
                                       race_password: RACE_PASSWORD,
                                       race_group_id: RACE_GROUP_ID,
                                       group_password: RACE_GROUP_PASSWORD)

runners.each do |row|
  runner_data = row.to_h
  weird_first_name_key = (runner_data.keys.find /first_name/).first # HACK to fix some kind of CSV encoding issue

  first_name = runner_data[:first_name] = runner_data.delete(weird_first_name_key)
  last_name = runner_data[:last_name]
  name = "#{first_name} #{last_name}"

  attendee_number = runner_data.fetch(:'attendee_#')

  if first_name =~ /^#/
    puts "skipping #{attendee_number}: #{name} since it was marked as skip"
    next
  end

  puts "Registering Attendee ##{attendee_number}: #{name}"

  alert = catch :alert do
    driver.call(runner_data.to_h)
    puts "\tRegistered #{attendee_number}: #{name}"
    next
  end

  puts "Skipping #{attendee_number}: #{name} due to #{alert}"
end

__END__
browser.visit url

other_adult_btn = browser.find '.differentAdult', visible: false
other_adult_btn.ancestor('label').click

browser.fill_in 'registrant[1][first_name]', with: 'Mike'
browser.fill_in 'registrant[1][last_name]', with: 'Subelsky'
browser.fill_in 'registrant[1][email]', with: 'brf+test@mikeshop.net'
browser.fill_in 'registrant[1][confirmEmail]', with: 'brf+test@mikeshop.net'
browser.fill_in 'registrant[1][password]', with: password
browser.fill_in 'registrant[1][confirmPassword]', with: password
browser.fill_in 'registrant[1][dob]', with: '04/20/1977'

browser.find('.label-text', text: 'Male', wait: 1).click
# OR
# browser.find('.label-text', text: 'Female', wait: 1).click

browser.fill_in 'registrant[1][phone]', with: '443-928-7417'
browser.fill_in 'registrant[1][address1]', with: '306 Woodlawn Rd'
browser.fill_in 'registrant[1][zipcode]', with: '21210'

browser.find('span', class: 'label-text', exact_text: 'Charity Registration').click

race_id = RACE_MAPPINGS.fetch(race_name) { raise "unrecognized race name '#{race_name}'" }
browser.find(:xpath, "//option[@value=#{race_id}]").click

browser.execute_script("window.scrollTo(0, document.body.scrollHeight);")
browser.find('.ageConfirm').click

button = browser.find_button('Continue')
button.click

browser.find('span', text: 'Join an Existing Group').click

browser.find(:xpath, "//option[@value=#{RACE_GROUP_ID}]").click
browser.find('input[type="password"]').fill_in(with: RACE_GROUP_PASSWORD)

button = browser.find_button('Continue')
button.click

browser.find('span', text: 'Roland Park Public Annual Fund').click
browser.find('span', text: 'No').click
browser.find('span', text: 'Yes, I confirm').click

browser.fill_in 'question[90999][0][value]', with: 'Laura Wexler'
browser.fill_in 'question[91000][0][value]', with: '443-739-2976'

button = browser.find_button('Continue')
button.click

browser.find('option', text: "Men's Large").click

button = browser.find_button('Continue')
button.click

# Review registration
binding.pry

button = browser.find_button('Complete Registration')
button.click
